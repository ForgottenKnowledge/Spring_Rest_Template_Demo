#    Описание задачи
#
# Для работы предоставляется API по URL - http://94.198.50.185:7081/api/users
#
# Ваша задача: Последовательно выполнить следующие операции и получить код для проверки на платформе:
#
# 1) Получить список всех пользователей
#
# 2) Когда вы получите ответ на свой первый запрос, вы должны сохранить свой session id,
#    который получен через cookie. Вы получите его в заголовке ответа set-cookie.
#    Поскольку все действия происходят в рамках одной сессии, все дальнейшие запросы
#    должны использовать полученный session id ( необходимо использовать заголовок в последующих запросах )
#
# 3) Сохранить пользователя с id = 3, name = James, lastName = Brown, age = на ваш выбор.
#    В случае успеха вы получите первую часть кода.
#
# 4) Изменить пользователя с id = 3. Необходимо поменять name на Thomas, а lastName на Shelby.
#    В случае успеха вы получите еще одну часть кода.
#
# 5) Удалить пользователя с id = 3.
#    В случае успеха вы получите последнюю часть кода.
#
# В результате выполненных операций вы должны получить итоговый код, сконкатенировав все его части. Количество символов в коде = 18.
#
#    Необходимые данные:
#
#      Модель пользователя:
#
#      public class User {
#       private Long id;
#       private String name;
#       private String lastName;
#       private Byte age;
#       ...
#      }

#     Список URL для операций и типы запросов:
#
#    Получение всех пользователей - …/api/users ( GET )
#    Добавление пользователя - …/api/users ( POST )
#    Изменение пользователя - …/api/users ( PUT )
#    Удаление пользователя - …/api/users /{id} ( DELETE )
#
#
#    Требования:
# 1) Все операции должны проводится в рамках одной сессии
#    (не пытайтесь выполнить операции в ручную, например через POSTMAN, сессия имеет ограниченное время   жизни )
# 2) Все операции должны быть выполнены последовательно по условию
# 3) Для того, чтобы получить необходимый заголовок из запроса, необходимо использовать тип данных ResponseEntity в качестве ответа на ваш запрос.
#
#    Решение:
# 1) Запустить основную программу или выполнить все запросы из этого файда нажатием кнопки "Run All Requests"
#    (При запуске основной программы ответ выводится в консоль).
# 2) При выполнении всех запросов у каждого придёт ответ в файле .json, в котором будет написана часть кода.
#    результат конкатенации 3 частей это ответ.

GET  http://94.198.50.185:7081/api/users
Accept: application/json

###

POST http://94.198.50.185:7081/api/users
Accept: application/json
Content-Type: application/json

{
  "id": 3,
  "name": "James",
  "lastName": "Brown",
  "age": 99
}

###

PUT http://94.198.50.185:7081/api/users
Accept: application/json
Content-Type: application/json

{
  "id": 3,
  "name": "Thomas",
  "lastName": "Shelby",
  "age": 99
}

###

DELETE http://94.198.50.185:7081/api/users/3
Accept: application/json